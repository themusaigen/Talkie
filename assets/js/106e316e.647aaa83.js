"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[443],{51881:e=>{e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Grabs [RemoteFunction](https://developer.roblox.com/en-us/api-reference/class/RemoteFunction) from the workspace and returns a wrapper for it.\\n\\n```lua\\nlocal fun = client:Function(\\"MyFunction\\")\\n\\nfun(42) -- or fun:Invoke\\n```","params":[{"name":"parent","desc":"","lua_type":"Instance"},{"name":"name","desc":"","lua_type":"string"},{"name":"handler","desc":"","lua_type":"Types.ClientHandler?"},{"name":"middleware","desc":"","lua_type":"Types.ClientMiddleware?\\n"}],"returns":[{"desc":"","lua_type":"Types.ClientFunction\\n"}],"function_type":"static","source":{"line":27,"path":"src/Client/Function.lua"}},{"name":"Listen","desc":"Assigns new handler that will called then server invokes the remote.","params":[{"name":"handler","desc":"","lua_type":"Types.ClientHandler"}],"returns":[],"function_type":"method","source":{"line":102,"path":"src/Client/Function.lua"}},{"name":"Invoke","desc":"Invokes a function on the server.\\n\\n```lua\\nevent:Invoke(\\"I am hungry!\\")\\nevent(\\"I am hungry!\\")\\n```","params":[{"name":"...","desc":"","lua_type":"any"}],"returns":[{"desc":"","lua_type":"any\\n"}],"function_type":"method","source":{"line":121,"path":"src/Client/Function.lua"}},{"name":"SetMiddleware","desc":"Post-method for setup a middleware\\n\\n```lua\\nevent:SetMiddleware(Talkie.Inbound(...) + Talkie.Outbound(...))\\n```","params":[{"name":"middleware","desc":"","lua_type":"Types.ClientMiddleware"}],"returns":[],"function_type":"method","source":{"line":144,"path":"src/Client/Function.lua"}}],"properties":[],"types":[],"name":"Client.Function","desc":"Clientside wrapper over [RemoteFunction](https://developer.roblox.com/en-us/api-reference/class/RemoteFunction)","realm":["Client"],"source":{"line":4,"path":"src/Client/Function.lua"}}')}}]);