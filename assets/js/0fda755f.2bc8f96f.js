"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4],{40183:e=>{e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Grabs [RemoteEvent](https://create.roblox.com/docs/reference/engine/classes/RemoteEvent) or [UnreliableRemoteEvent](https://create.roblox.com/docs/reference/engine/classes/UnreliableRemoteEvent) instance and return wrapper for it.\\n\\n```lua\\nlocal event = client:Event(\\"MyEvent\\")\\n\\nevent:Fire(24, 26)\\n```","params":[{"name":"parent","desc":"","lua_type":"Instance"},{"name":"name","desc":"","lua_type":"string"},{"name":"middleware","desc":"","lua_type":"Types.ClientMiddleware?"}],"returns":[{"desc":"","lua_type":"Types.ClientEvent\\n"}],"function_type":"static","source":{"line":27,"path":"src/Client/Event.lua"}},{"name":"Connect","desc":"Appends new connection to the event.","params":[{"name":"handler","desc":"","lua_type":"Types.ClientHandler"}],"returns":[{"desc":"","lua_type":"Signal.Connection\\n"}],"function_type":"method","source":{"line":71,"path":"src/Client/Event.lua"}},{"name":"Once","desc":"Appends new connection that will fired only once.","params":[{"name":"handler","desc":"","lua_type":"Types.ClientHandler"}],"returns":[{"desc":"","lua_type":"Signal.Connection\\n"}],"function_type":"method","source":{"line":80,"path":"src/Client/Event.lua"}},{"name":"Wait","desc":"Yields the current thread until the signal is fired, and returns the arguments fired from the signal.","params":[],"returns":[],"function_type":"method","yields":true,"source":{"line":90,"path":"src/Client/Event.lua"}},{"name":"Fire","desc":"Fires the event on server with middlewares applied.","params":[{"name":"...","desc":"","lua_type":"any"}],"returns":[],"function_type":"method","source":{"line":96,"path":"src/Client/Event.lua"}},{"name":"SetMiddleware","desc":"Post-method for setup a middleware\\n\\n```lua\\nevent:SetMiddleware(Talkie.Inbound(...) + Talkie.Outbound(...))\\n```","params":[{"name":"middleware","desc":"","lua_type":"Types.ClientMiddleware"}],"returns":[],"function_type":"method","source":{"line":118,"path":"src/Client/Event.lua"}},{"name":"Destroy","desc":"Destroys the event.","params":[],"returns":[],"function_type":"method","source":{"line":144,"path":"src/Client/Event.lua"}}],"properties":[],"types":[],"name":"Client.Event","desc":"Clientside wrapper over [RemoteEvent](https://developer.roblox.com/en-us/api-reference/class/RemoteEvent)","realm":["Client"],"source":{"line":4,"path":"src/Client/Event.lua"}}')}}]);