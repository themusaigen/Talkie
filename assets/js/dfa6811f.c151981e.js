"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[555],{40737:e=>{e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Constructs new buffer.","params":[{"name":"data","desc":"","lua_type":"Types.Buffer | buffer | string | number | nil"}],"returns":[{"desc":"","lua_type":"Types.Buffer\\n"}],"function_type":"static","source":{"line":18,"path":"src/Buffer.lua"}},{"name":"Is","desc":"Check is value Buffer`s instance.","params":[{"name":"buf","desc":"","lua_type":"table"}],"returns":[],"function_type":"static","source":{"line":52,"path":"src/Buffer.lua"}},{"name":"Resize","desc":"Autoresize method is used to prevent out-of-bounds error.\\nUsed for internal Buffer`s methods.","params":[{"name":"len","desc":"","lua_type":"number"}],"returns":[],"function_type":"method","source":{"line":58,"path":"src/Buffer.lua"}},{"name":"Realloc","desc":"Force reallocation method with specified size.","params":[{"name":"len","desc":"","lua_type":"number"}],"returns":[],"function_type":"method","source":{"line":87,"path":"src/Buffer.lua"}},{"name":"ReadInt8","desc":"Returns a number in range [-128; 127]","params":[],"returns":[{"desc":"","lua_type":"number"}],"function_type":"method","source":{"line":122,"path":"src/Buffer.lua"}},{"name":"ReadUInt8","desc":"Returns a number in range [0; 255]","params":[],"returns":[{"desc":"","lua_type":"number"}],"function_type":"method","source":{"line":130,"path":"src/Buffer.lua"}},{"name":"ReadInt16","desc":"Returns a number in range [-32768; 32767]","params":[],"returns":[{"desc":"","lua_type":"number"}],"function_type":"method","source":{"line":138,"path":"src/Buffer.lua"}},{"name":"ReadUInt16","desc":"Returns a number in range [0; 65535].","params":[],"returns":[{"desc":"","lua_type":"number"}],"function_type":"method","source":{"line":146,"path":"src/Buffer.lua"}},{"name":"ReadInt32","desc":"Returns a number in range [-2\'147\'483\'648; 2\'147\'483\'647]","params":[],"returns":[{"desc":"","lua_type":"number"}],"function_type":"method","source":{"line":154,"path":"src/Buffer.lua"}},{"name":"ReadUInt32","desc":"Returns a number in range [0; 4\'294\'967\'295]","params":[],"returns":[{"desc":"","lua_type":"number"}],"function_type":"method","source":{"line":162,"path":"src/Buffer.lua"}},{"name":"ReadFloat","desc":"Returns a floating point (32 bits) number.","params":[],"returns":[{"desc":"","lua_type":"number"}],"function_type":"method","source":{"line":170,"path":"src/Buffer.lua"}},{"name":"ReadFloat32","desc":"Returns a floating point (32 bits) number.","params":[],"returns":[{"desc":"","lua_type":"number"}],"function_type":"method","source":{"line":178,"path":"src/Buffer.lua"}},{"name":"ReadFloat64","desc":"Returns a floating point (64 bits) number.","params":[],"returns":[{"desc":"","lua_type":"number"}],"function_type":"method","source":{"line":186,"path":"src/Buffer.lua"}},{"name":"WriteInt8","desc":"Writes a number in range [-128; 127]","params":[{"name":"value","desc":"Integer. Floating point will throw the error.","lua_type":"number"}],"returns":[],"function_type":"method","source":{"line":194,"path":"src/Buffer.lua"}},{"name":"WriteUInt8","desc":"Writes a number in range [0; 255]","params":[{"name":"value","desc":"Integer. Floating point will throw the error.","lua_type":"number"}],"returns":[],"function_type":"method","source":{"line":202,"path":"src/Buffer.lua"}},{"name":"WriteInt16","desc":"Writes a number in range [-32768; 32767]","params":[{"name":"value","desc":"Integer. Floating point will throw the error.","lua_type":"number"}],"returns":[],"function_type":"method","source":{"line":210,"path":"src/Buffer.lua"}},{"name":"WriteUInt16","desc":"Writes a number in range [0; 65535]","params":[{"name":"value","desc":"Integer. Floating point will throw the error.","lua_type":"number"}],"returns":[],"function_type":"method","source":{"line":218,"path":"src/Buffer.lua"}},{"name":"WriteInt32","desc":"Writes a number in range [-2\'147\'483\'648; 2\'147\'483\'647]","params":[{"name":"value","desc":"Integer. Floating point will throw the error.","lua_type":"number"}],"returns":[],"function_type":"method","source":{"line":226,"path":"src/Buffer.lua"}},{"name":"WriteUInt32","desc":"Writes a number in range [0; 4\'294\'967\'295]","params":[{"name":"value","desc":"Integer. Floating point will throw the error.","lua_type":"number"}],"returns":[],"function_type":"method","source":{"line":234,"path":"src/Buffer.lua"}},{"name":"WriteFloat","desc":"Writes a floating point (32 bits) value.","params":[{"name":"value","desc":"","lua_type":"number"}],"returns":[],"function_type":"method","source":{"line":242,"path":"src/Buffer.lua"}},{"name":"WriteFloat32","desc":"Writes a floating point (32 bits) value.","params":[{"name":"value","desc":"","lua_type":"number"}],"returns":[],"function_type":"method","source":{"line":250,"path":"src/Buffer.lua"}},{"name":"WriteFloat64","desc":"Writes a floating point (64 bits) value.","params":[{"name":"value","desc":"","lua_type":"number"}],"returns":[],"function_type":"method","source":{"line":258,"path":"src/Buffer.lua"}},{"name":"ReadString","desc":"Reads the string from buffer.","params":[{"name":"len","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"string\\n"}],"function_type":"method","source":{"line":295,"path":"src/Buffer.lua"}},{"name":"WriteString","desc":"Writes the string in buffer.","params":[{"name":"str","desc":"","lua_type":"string"}],"returns":[],"function_type":"method","source":{"line":319,"path":"src/Buffer.lua"}},{"name":"WriteBuffer","desc":"Writes other buffer into self.","params":[{"name":"input","desc":"","lua_type":"Types.Buffer | buffer | string"}],"returns":[],"function_type":"method","source":{"line":337,"path":"src/Buffer.lua"}},{"name":"ReadBuffer","desc":"Reads wrapper class from [buffer](https://create.roblox.com/docs/reference/engine/libraries/buffer)","params":[{"name":"size","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"Types.Buffer\\n"}],"function_type":"method","source":{"line":350,"path":"src/Buffer.lua"}},{"name":"WriteBoolean","desc":"Writes a boolean.","params":[{"name":"state","desc":"","lua_type":"boolean"}],"returns":[],"function_type":"method","source":{"line":355,"path":"src/Buffer.lua"}},{"name":"ReadBoolean","desc":"Reads a boolean.","params":[],"returns":[{"desc":"","lua_type":"boolean\\n"}],"function_type":"method","source":{"line":363,"path":"src/Buffer.lua"}},{"name":"GetNumberOfUnreadBytes","desc":"Returns number of unread bytes.","params":[],"returns":[{"desc":"","lua_type":"number\\n"}],"function_type":"method","source":{"line":368,"path":"src/Buffer.lua"}},{"name":"GetNumberOfBytesUsed","desc":"Returns number of bytes already written.","params":[],"returns":[{"desc":"","lua_type":"number\\n"}],"function_type":"method","source":{"line":373,"path":"src/Buffer.lua"}},{"name":"IgnoreBytes","desc":"Ignore specific amount of bytes. Useful then you want to ignore packetId or unnecessary data.","params":[{"name":"count","desc":"","lua_type":"number"}],"returns":[],"function_type":"method","source":{"line":378,"path":"src/Buffer.lua"}},{"name":"GetSize","desc":"Returns the length of buffer. [buffer.len](https://create.roblox.com/docs/reference/engine/libraries/buffer#len) used underhood.","params":[],"returns":[{"desc":"","lua_type":"number\\n"}],"function_type":"method","source":{"line":387,"path":"src/Buffer.lua"}},{"name":"SetWriteOffset","desc":"Shifts the write cursor.","params":[{"name":"offset","desc":"","lua_type":"number"}],"returns":[],"function_type":"method","source":{"line":392,"path":"src/Buffer.lua"}},{"name":"SetReadOffset","desc":"Shifts the read cursor.","params":[{"name":"offset","desc":"","lua_type":"number"}],"returns":[],"function_type":"method","source":{"line":401,"path":"src/Buffer.lua"}},{"name":"ResetWriteOffset","desc":"Resets write cursor by setting it to 0.","params":[],"returns":[],"function_type":"method","source":{"line":410,"path":"src/Buffer.lua"}},{"name":"ResetReadOffset","desc":"Resets read cursor by setting it to 0.","params":[],"returns":[],"function_type":"method","source":{"line":415,"path":"src/Buffer.lua"}},{"name":"ResetOffsets","desc":"Resets all offsets.","params":[],"returns":[],"function_type":"method","source":{"line":420,"path":"src/Buffer.lua"}},{"name":"Reset","desc":"Resets all offsets and fill buffer as 0x00 for all length.","params":[],"returns":[],"function_type":"method","source":{"line":426,"path":"src/Buffer.lua"}},{"name":"SetData","desc":"Sets new data.","params":[{"name":"data","desc":"","lua_type":"Types.Buffer | buffer | string"}],"returns":[],"function_type":"method","source":{"line":434,"path":"src/Buffer.lua"}},{"name":"GetData","desc":"Returns [buffer](https://create.roblox.com/docs/reference/engine/libraries/buffer) to network replicate.","params":[],"returns":[{"desc":"","lua_type":"buffer\\n"}],"function_type":"method","source":{"line":449,"path":"src/Buffer.lua"}},{"name":"Serialize","desc":"Serializes buffer. [buffer.tostring](https://create.roblox.com/docs/reference/engine/libraries/buffer#tostring) used underhood.","params":[],"returns":[{"desc":"","lua_type":"string\\n"}],"function_type":"method","source":{"line":454,"path":"src/Buffer.lua"}}],"properties":[],"types":[],"name":"Buffer","desc":"Wrapper over builtin [buffer](https://create.roblox.com/docs/reference/engine/libraries/buffer) library.","source":{"line":6,"path":"src/Buffer.lua"}}')}}]);