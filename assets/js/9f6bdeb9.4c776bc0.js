"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[369],{37105:e=>{e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Creates new [RemoteFunction](https://developer.roblox.com/en-us/api-reference/class/RemoteFunction) and returns wrapper over it.\\n\\n```lua\\nlocal function typecheckForNumber(args)\\n  for k, v in args do\\n    if not (typeof(v) == \\"number\\") then\\n      -- Cancel other middleware and RemoteFunction handler.\\n      return false\\n    end\\n  end\\nend\\n\\nlocal function logger(args)\\n  for k, v in args do\\n    print(`{k} = {v}`)\\n  end\\nend\\n\\nlocal function doubleArgs(args)\\n  for k, v in args do\\n    if typeof(v) == \\"number\\" then\\n      args[k] *= 2\\n    end\\n  end\\nend\\n\\n-- Only numbers allowed.\\nlocal fun = server:Function(\\"MyFunction\\", function(player, arg)\\n  print(`Player {player.Name} send us arg: {arg}`)\\n  return 42\\nend, Talkie.Inbound(typecheckForNumber, logger) + Talkie.Outbound(doubleArgs))\\n```","params":[{"name":"parent","desc":"","lua_type":"Instance"},{"name":"name","desc":"","lua_type":"string"},{"name":"handler","desc":"","lua_type":"Types.ServerCallback?"},{"name":"middleware","desc":"","lua_type":"Types.ServerMiddleware?\\n"}],"returns":[{"desc":"","lua_type":"Types.ServerFunction\\n"}],"function_type":"static","source":{"line":51,"path":"src/Server/Function.lua"}},{"name":"Listen","desc":"Assigns new handler that will called then client invokes the remote.\\n\\n```lua\\nfun:Listen(function(player, arg1, arg2)\\n  -- If middleware present, they also will be applied to this handler.\\n  print(`{player.Name} called us with arg1 {arg1} and {arg2}`)\\nend)\\n```","params":[{"name":"handler","desc":"","lua_type":"Types.ServerCallback"}],"returns":[],"function_type":"method","source":{"line":140,"path":"src/Server/Function.lua"}},{"name":"Invoke","desc":"Invokes a function on the player with bunch of args.\\n\\n```lua\\ngame.Players.PlayerAdded:Connect(function(player)\\n  fun:Invoke(player, ...)\\n\\n  -- You can also use this variant.\\n  fun(player, ...)\\nend)\\n```","params":[{"name":"player","desc":"","lua_type":"Player"},{"name":"...","desc":"","lua_type":"any"}],"returns":[{"desc":"","lua_type":"...any\\n"}],"function_type":"method","source":{"line":163,"path":"src/Server/Function.lua"}},{"name":"SetMiddleware","desc":"Post-method for setup a middleware.\\n\\n```lua\\nfun:SetMiddleware(Talkie.Inbound(...) + Talkie.Outbound(...))\\n```","params":[{"name":"middleware","desc":"","lua_type":"Types.ServerMiddleware"}],"returns":[],"function_type":"method","source":{"line":186,"path":"src/Server/Function.lua"}},{"name":"Destroy","desc":"Destroys the [RemoteFunction](https://developer.roblox.com/en-us/api-reference/class/RemoteFunction).","params":[],"returns":[],"function_type":"method","source":{"line":215,"path":"src/Server/Function.lua"}}],"properties":[],"types":[],"name":"Server.Function","desc":"Serverside wrapper over [RemoteFunction](https://developer.roblox.com/en-us/api-reference/class/RemoteFunction)","realm":["Server"],"source":{"line":4,"path":"src/Server/Function.lua"}}')}}]);